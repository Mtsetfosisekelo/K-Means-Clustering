# -*- coding: utf-8 -*-
"""K-Means Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vXGvQp2Pt1L2YjAlG7NfcMr6AphaR4gT
"""

import matplotlib.pyplot as plt
import numpy as np
from sklearn.datasets import make_blobs
from sklearn.cluster import KMeans
import pandas as pd

"""## Generate the data points through the use of "sklearn". Please refer to the link below for the documentation
 - https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_blobs.html
"""

C = 50       #centers
N = 5000     #number of data points
X, labels = make_blobs(n_samples = N,
                       centers = C,
                       cluster_std = 0.80)

plt.figure(figsize=(8, 6))
plt.scatter(X[:, 0], X[:, 1], s=20) #visualize the general data
plt.show()

"""## To visualize the data with the corresponding labels we make use of the folowing code. 
  - The first step was to convert the data into a pandas dataframe. This makes it simple to filter the data with respect to the label attatched to each point
"""

df1 = pd.DataFrame(labels) #data frame for labels
df1.columns = ['label']

df2 = pd.DataFrame(X) #data frame for data points
df2.columns = ['X0',"X1"]

df3 = pd.concat([df1, df2], axis=1, join='outer') #final data frame
df3

plt.figure(figsize=(8, 6))
for i in range(C+1):
    df4 = df3.loc[df3.label == i]
    plt.scatter(df4.X0, df4.X1, s=20)
plt.show()

"""## Performing K-means clustering
 - It is crucial that one specifies the number of clusters
 
## The documentation can be explored from the below link
 - https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html?highlight=kmeans#sklearn.cluster.KMeans
"""

kc = 11    #number of clusters
kmeans = KMeans(n_clusters = kc)
kmeans.fit(X)
y_kmeans = kmeans.predict(X)

plt.figure(figsize=(8, 6))
plt.scatter(X[:, 0], X[:, 1], c = y_kmeans, s=20, cmap='viridis')

centers = kmeans.cluster_centers_
plt.scatter(centers[:, 0], centers[:, 1], c='k', s=100) #ploting the centroids
plt.title("K-Means Clusters",fontsize=20)
plt.show()